version: "2"

linters:
  default: all
  disable:
    - godoclint
    - funcorder
    #
    # Redundant
    #
    - cyclop    # revive
    - funlen    # revive
    - gocognit  # revive
    - gocyclo   # revive
    - lll       # revive

    #
    # Recommended? (easy)
    #

    - exhaustive            # check exhaustiveness of enum switch statements
    - godot                 # Check if comments end in a period
    - gosec                 # (gas): Inspects source code for security problems
    - inamedparam           # reports interfaces with unnamed method parameters
    - promlinter            # Check Prometheus metrics naming via promlint
    - tagalign              # check that struct tags are well aligned
    - thelper               # thelper detects tests helpers which is not start with t.Helper() method.
    - wrapcheck             # Checks that errors returned from external packages are wrapped

    #
    # Recommended? (requires some work)
    #

    - errname               # Checks that sentinel errors are prefixed with the `Err` and error types are suffixed with the `Error`.
    - ireturn               # Accept Interfaces, Return Concrete Types
    - mnd                   # An analyzer to detect magic numbers.

    #
    # Formatting only, useful in IDE but should not be forced on CI?
    #

    - nlreturn              # nlreturn checks for a new line before return and branch statements to increase code clarity
    - whitespace            # Whitespace is a linter that checks for unnecessary newlines at the start and end of functions, if, for, etc.
    - wsl                   # add or remove empty lines
    - wsl_v5                # add or remove empty lines
    - noinlineerr
    - embeddedstructfieldcheck

    #
    # Well intended, but not ready for this
    #
    - forcetypeassert       # finds forced type assertions
    - godox                 # Tool for detection of FIXME, TODO and other comment keywords
    - err113                # Go linter to check the errors handling expressions
    - paralleltest          # Detects missing usage of t.Parallel() method in your Go test
    - testpackage           # linter that makes you use a separate _test package

    #
    # Too strict / too many false positives (for now?)
    #
    - exhaustruct           # Checks if all structure fields are initialized
    - forbidigo             # Forbids identifiers
    - gochecknoglobals      # Check that no global variables exist.
    - goconst               # Finds repeated strings that could be replaced by a constant
    - tagliatelle           # Checks the struct tags.
    - varnamelen            # checks that the length of a variable's name matches its scope
    - prealloc

    - depguard

    - perfsprint
    - noctx # manu
    - dupword


  settings:

    errcheck:
      # Report about not checking of errors in type assertions: `a := b.(MyStruct)`.
      # Such cases aren't reported by default.
      check-type-assertions: false

    gocritic:
      enable-all: true
      disabled-checks:
        - paramTypeCombine
        - todoCommentWithoutDetail
        - exposedSyncMutex # manu
        - commentedOutCode
        - ptrToRefParam  # manu
        - octalLiteral # manu
        - unnamedResult
        - assignOp
        - importShadow # manu
        - emptyStringTest  # manu
        - builtinShadow # manu
        - captLocal # manu
        - commentFormatting
        - whyNoLint
        - preferFprint  # manu

    govet:
      disable:
        - fieldalignment
        - shadow # manu
      enable-all: true

    maintidx:
      # adjusted to accommodate API constructor complexity
      under: 10

    misspell:
      locale: US

    nestif:
      # lower this after refactoring
      min-complexity: 13

    nlreturn:
      block-size: 5

    nolintlint:
      require-explanation: false  # don't require an explanation for nolint directives
      require-specific: false     # don't require nolint directives to be specific about which linter is being skipped
      allow-unused: false         # report any unused nolint directives

    revive:
      severity: error
      enable-all-rules: true
      rules:
        - name: add-constant
          disabled: true
        - name: bool-literal-in-expr
          disabled: true
        - name: cognitive-complexity
          arguments:
            # lower this after refactoring
            - 90
        - name: comment-spacings
          disabled: true
        - name: confusing-results
          disabled: true
        - name: cyclomatic
          arguments:
            # lower this after refactoring
            - 49
        - name: enforce-switch-style
          disabled: true
        - name: context-as-argument
          disabled: true
        - name: empty-lines
          disabled: true
        - name: function-length
          arguments:
            # lower this after refactoring
            - 111
            - 287
        - name: import-alias-naming
          disabled: true
        - name: import-shadowing
          disabled: true
        - name: line-length-limit
          arguments:
            # lower this after refactoring
            - 251
        - name: max-control-nesting
          arguments:
            # lower this after refactoring
            - 7
        - name: if-return
          disabled: true
        - name: max-public-structs
          disabled: true
        - name: package-directory-mismatch
          disabled: true
        - name: redundant-test-main-exit
          disabled: true
        - name: struct-tag
          disabled: true
        - name: var-naming
          disabled: true
        - name: exported
          disabled: true
        - name: identical-switch-branches
          disabled: true
        - name: indent-error-flow
          disabled: true
        - name: unexported-naming
          disabled: true
        - name: unnecessary-format
          disabled: true
        - name: unused-parameter
          disabled: true
        - name: use-any
          disabled: true
        - name: use-errors-new
          disabled: true
        - name: unused-receiver
          disabled: true
        - name: var-declaration
          disabled: true

    staticcheck:
      checks:
        - all
        - -ST1003   # manu

    wsl:
      # Allow blocks to end with comments
      allow-trailing-comment: true

  exclusions:
    presets:
      - comments
      - common-false-positives
      - legacy
      - std-error-handling
    rules:

      # `err` is often shadowed, we may continue to do it

      - linters:
          - govet
        text: 'shadow: declaration of "(err|ctx)" shadows declaration'

      # named/naked returns are evil, with a single exception
      # https://go.dev/wiki/CodeReviewComments#named-result-parameters
      - linters:
          - nonamedreturns
        text: named return .* with type .* found

      # we use t,ctx instead of ctx,t in tests
      - linters:
          - revive
        path: pkg/(.+)_test.go
        text: 'context-as-argument: context.Context should be the first parameter of a function'

    paths:
      - third_party$
      - builtin$
      - examples$

issues:
  max-issues-per-linter: 0
  max-same-issues: 0

formatters:
  settings:
    gci:
      sections:
        - standard
        - default
        - prefix(github.com/crowdsecurity)
        - prefix(github.com/crowdsecurity/crowdsec)

  exclusions:
    paths:
      - third_party$
      - builtin$
      - examples$
