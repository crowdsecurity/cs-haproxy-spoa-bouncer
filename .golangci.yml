version: "2"

linters:
  default: all
  disable:
    #
    # Redundant
    #
    - cyclop    # revive
    - funlen    # revive
    - gocognit  # revive
    - gocyclo   # revive
    - lll       # revive

    # Disabled atm

    - intrange              # intrange is a linter to find places where for loops could make use of an integer range.
    - funcorder

    #
    # Recommended? (easy)
    #

    - dogsled               # Checks assignments with too many blank identifiers (e.g. x, _, _, _, := f())
    - errchkjson            # Checks types passed to the json encoding functions. Reports unsupported types and reports occasions, where the check for the returned error can be omitted.
    - exhaustive            # check exhaustiveness of enum switch statements
    - godot                 # Check if comments end in a period
    - gosec                 # (gas): Inspects source code for security problems
    - inamedparam           # reports interfaces with unnamed method parameters
    - musttag               # enforce field tags in (un)marshaled structs
    - promlinter            # Check Prometheus metrics naming via promlint
    - protogetter           # Reports direct reads from proto message fields when getters should be used
    - tagalign              # check that struct tags are well aligned
    - thelper               # thelper detects tests helpers which is not start with t.Helper() method.
    - wrapcheck             # Checks that errors returned from external packages are wrapped

    #
    # Recommended? (requires some work)
    #

    - errname               # Checks that sentinel errors are prefixed with the `Err` and error types are suffixed with the `Error`.
    - ireturn               # Accept Interfaces, Return Concrete Types
    - mnd                   # An analyzer to detect magic numbers.
    - nilnil                # Checks that there is no simultaneous return of `nil` error and an invalid value.
    - unparam               # Reports unused function parameters

    #
    # Formatting only, useful in IDE but should not be forced on CI?
    #

    - nlreturn              # nlreturn checks for a new line before return and branch statements to increase code clarity
    - whitespace            # Whitespace is a linter that checks for unnecessary newlines at the start and end of functions, if, for, etc.
    - wsl                   # add or remove empty lines

    #
    # Well intended, but not ready for this
    #
    - dupl                  # Tool for code clone detection
    - forcetypeassert       # finds forced type assertions
    - godox                 # Tool for detection of FIXME, TODO and other comment keywords
    - err113                # Go linter to check the errors handling expressions
    - paralleltest          # Detects missing usage of t.Parallel() method in your Go test
    - testpackage           # linter that makes you use a separate _test package

    #
    # Too strict / too many false positives (for now?)
    #
    - exhaustruct           # Checks if all structure fields are initialized
    - forbidigo             # Forbids identifiers
    - gochecknoglobals      # Check that no global variables exist.
    - goconst               # Finds repeated strings that could be replaced by a constant
    - tagliatelle           # Checks the struct tags.
    - varnamelen            # checks that the length of a variable's name matches its scope
    - prealloc

    - depguard
    - revive

    - perfsprint
    - noctx # manu
    - dupword


  settings:

    errcheck:
      # Report about not checking of errors in type assertions: `a := b.(MyStruct)`.
      # Such cases aren't reported by default.
      check-type-assertions: false
      # List of functions to exclude from checking, where each entry is a single function to exclude.
      # See https://github.com/kisielk/errcheck#excluding-functions for details.
#      exclude-functions:
#        - (*bytes.Buffer).ReadFrom          # TODO
#        - io.Copy                           # TODO
#        - (net/http.ResponseWriter).Write   # TODO
#        - (*os/exec.Cmd).Start
#        - (*os/exec.Cmd).Wait
#        - (*os.Process).Kill
#        - (*text/template.Template).ExecuteTemplate
#        - syscall.FreeLibrary
#        - golang.org/x/sys/windows.CloseHandle
#        - golang.org/x/sys/windows.ResetEvent
#        - (*golang.org/x/sys/windows/svc/eventlog.Log).Info
#        - (*golang.org/x/sys/windows/svc/mgr.Mgr).Disconnect
#
#        - (github.com/bluele/gcache.Cache).Set
#        - (github.com/gin-gonic/gin.ResponseWriter).WriteString
#        - (*github.com/segmentio/kafka-go.Reader).SetOffsetAt
#        - (*gopkg.in/tomb.v2.Tomb).Wait
#
#        - (*github.com/crowdsecurity/crowdsec/pkg/appsec.ReqDumpFilter).FilterArgs
#        - (*github.com/crowdsecurity/crowdsec/pkg/appsec.ReqDumpFilter).FilterBody
#        - (*github.com/crowdsecurity/crowdsec/pkg/appsec.ReqDumpFilter).FilterHeaders
#        - (*github.com/crowdsecurity/crowdsec/pkg/longpollclient.LongPollClient).Stop

    gocritic:
      enable-all: true
      disabled-checks:
        - paramTypeCombine
        - todoCommentWithoutDetail
        - exposedSyncMutex # manu
#        - ifElseChain
#        - hugeParam
        - commentedOutCode
        - ptrToRefParam  # manu
        - octalLiteral # manu
#        - commentedOutImport
        - unnamedResult
        - assignOp
        - importShadow # manu
        - emptyStringTest  # manu
        - builtinShadow # manu
        - captLocal # manu
#        - sloppyReassign
#        - appendCombine
        - commentFormatting
#        - deferInLoop             #
        - whyNoLint
#        - equalFold               #
#        - unnecessaryBlock        #
#        - tooManyResultsChecker
#        - docStub
        - preferFprint  # manu
#        - importShadow

    govet:
      disable:
        - fieldalignment
        - shadow # manu
      enable-all: true

    maintidx:
      # raise this after refactoring
      under: 13

    misspell:
      locale: US

    nestif:
      # lower this after refactoring
      min-complexity: 13

    nlreturn:
      block-size: 5

    nolintlint:
      require-explanation: false  # don't require an explanation for nolint directives
      require-specific: false     # don't require nolint directives to be specific about which linter is being skipped
      allow-unused: false         # report any unused nolint directives

    revive:
      severity: error
      enable-all-rules: true
      rules:
#        - name: add-constant
#          disabled: true
#        - name: cognitive-complexity
#          arguments:
#            # lower this after refactoring
#            - 113
#        - name: comment-spacings
#          disabled: true
#        - name: confusing-results
#          disabled: true
        - name: cyclomatic
          arguments:
            # lower this after refactoring
            - 46
#        - name: defer
#          disabled: true
#        - name: empty-block
#          disabled: true
#        - name: empty-lines
#          disabled: true
#        - name: error-naming
#          disabled: true
#        - name: flag-parameter
#          disabled: true
#        - name: function-result-limit
#          arguments:
#            - 6
#        - name: function-length
#          arguments:
#            # lower this after refactoring
#            - 87
#            - 198
#        - name: get-return
#          disabled: true
#        - name: increment-decrement
#          disabled: true
#        - name: import-alias-naming
#          disabled: true
#        - name: import-shadowing
#          disabled: true
#        - name: line-length-limit
#          arguments:
#            # lower this after refactoring
#            - 221
#        - name: max-control-nesting
#          arguments:
#            # lower this after refactoring
#            - 7
#        - name: max-public-structs
#          disabled: true
#        - name: nested-structs
#          disabled: true
#        - name: package-comments
#          disabled: true
#        - name: redundant-import-alias
#          disabled: true
#        - name: var-naming
#          disabled: true
#        - name: unchecked-type-assertion
#          disabled: true
#        - name: exported
#          disabled: true
#        - name: unexported-naming
#          disabled: true
#        - name: unexported-return
#          disabled: true
#        - name: unhandled-error
#          arguments:
#            - fmt.Print
#            - fmt.Printf
#            - fmt.Println
#          disabled: true
#        - name: unnecessary-stmt
#          disabled: true
#        - name: unused-parameter
#          disabled: true
#        - name: unused-receiver
#          disabled: true
#        - name: use-any
#          disabled: true
#        - name: useless-break
#          disabled: true

    staticcheck:
      checks:
        - all
        - -ST1003   # manu
#        - -ST1005
#        - -ST1012
#        - -QF1003

    wsl:
      # Allow blocks to end with comments
      allow-trailing-comment: true

  exclusions:
    presets:
      - comments
      - common-false-positives
      - legacy
      - std-error-handling
    rules:

      # `err` is often shadowed, we may continue to do it

      - linters:
          - govet
        text: 'shadow: declaration of "(err|ctx)" shadows declaration'

      # Will apply, trivial - just beware of merge conflicts

      - linters:
          - perfsprint
        text: fmt.Sprintf can be replaced .*

      # Will fix, easy but some thinking required

#      - linters:
#          - errorlint
#        text: non-wrapping format verb for fmt.Errorf. Use `%w` to format errors
#      - linters:
#          - nosprintfhostport
#        text: host:port in url should be constructed with net.JoinHostPort and not directly with fmt.Sprintf

#      # https://github.com/timakin/bodyclose
#      - linters:
#          - bodyclose
#        text: response body must be closed

      # named/naked returns are evil, with a single exception
      # https://go.dev/wiki/CodeReviewComments#named-result-parameters
      - linters:
          - nonamedreturns
        text: named return .* with type .* found

      # we use t,ctx instead of ctx,t in tests
      - linters:
          - revive
        path: pkg/(.+)_test.go
        text: 'context-as-argument: context.Context should be the first parameter of a function'

      # need some cleanup first: to create db in memory and share the client, not the config
      - linters:
          - usetesting
        path: (.+)_test.go
        text: context.Background.*

    paths:
      - third_party$
      - builtin$
      - examples$

issues:
  max-issues-per-linter: 0
  max-same-issues: 0

formatters:
  settings:
    gci:
      sections:
        - standard
        - default
        - prefix(github.com/crowdsecurity)
        - prefix(github.com/crowdsecurity/crowdsec)

  exclusions:
    paths:
      - third_party$
      - builtin$
      - examples$
