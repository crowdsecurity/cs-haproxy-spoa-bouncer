events {
    worker_connections 1024;
}

http {
    # Enable logging
    access_log /var/log/nginx/access.log;
    error_log /var/log/nginx/error.log;

    # Upstream to HAProxy
    upstream haproxy_backend {
        server haproxy:9090;
    }

    server {
        listen 80;
        server_name _;

        # Log the original client IP
        access_log /var/log/nginx/access.log;

        location / {
            # Get the real client IP (in production this would be the actual client)
            # For testing, we'll use $remote_addr which will be the docker client
            set $real_ip $remote_addr;
            
            # If testing with curl from host, you can override with a custom header
            # curl -H "X-Test-Client-IP: 1.2.3.4" http://localhost:8080
            if ($http_x_test_client_ip != "") {
                set $real_ip $http_x_test_client_ip;
            }

            # Set headers like Cloudflare/reverse proxy would
            proxy_set_header X-Real-IP $real_ip;
            proxy_set_header X-Forwarded-For $real_ip;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header Host $host;
            
            # Pass through other headers
            proxy_set_header X-Forwarded-Host $host;
            proxy_set_header X-Forwarded-Port $server_port;

            # Proxy to HAProxy
            proxy_pass http://haproxy_backend;
            
            # Don't buffer
            proxy_buffering off;
        }
    }
}

